plugins {
    alias(libs.plugins.protobuf)
    alias(libs.plugins.spring)
}

dependencies {
    implementation libs.spring.grpc
    implementation libs.spring.data
    implementation libs.javax.annotation
    implementation libs.lombok
    implementation libs.postgresql.driver
    implementation libs.hibernate

    implementation libs.protobuf.java.util
    implementation libs.grpc.protobuf
    implementation libs.grpc.stub
    implementation libs.protobuf.java

    implementation libs.liquibase.core

    testImplementation libs.testcontainers.core
    testImplementation libs.jupiter
    testImplementation libs.spring.boot.starter.test

    implementation platform('org.testcontainers:testcontainers-bom:1.19.2')
    testImplementation('org.testcontainers:postgresql')
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    testLogging {     // This is for logging and can be removed.
        events("passed", "skipped", "failed")
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.24.4'
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.59.0'
        }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}